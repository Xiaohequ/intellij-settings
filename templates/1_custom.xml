<templateSet group="1_custom">
  <template name="returns" value="return handleExceptions(() -&gt; {&#10;    //check inputs&#10;    &#10;    return SUCCESS;&#10;});" description="define actionsupport exception handler" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="returno" value="$CLAZZ$ $OBJ$ = new $CLAZZ$();&#10;$END$&#10;return $OBJ$;" description="define return with object" toReformat="false" toShortenFQNames="true">
    <variable name="CLAZZ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="OBJ" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="singleton" value="// ================= singleton ======================&#10;private static final $CLAZZ$ instance = new $CLAZZ$();&#10;public static $CLAZZ$ getInstance(){ return instance; }&#10;private $CLAZZ$(){} // prevent instanciate outside&#10;&#10;// ================= class fields ===================&#10;$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="CLAZZ" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="logger" value="private static final Logger logger = LoggerFactory.getLogger($CLAZZ$.class);&#10;" description="declarate logger for class" toReformat="false" toShortenFQNames="true">
    <variable name="CLAZZ" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="JBuilderV2" value="//=================== Builder =======================&#10;public static class Builder extends JsonDTOBuilderV2&lt;$OUT$$END$, $IN$&gt;{&#10;    @Override&#10;    protected $IN$ getInputInstance() { return new $IN$(); }&#10;&#10;    @Override&#10;    protected $OUT$ getOutputInstance() { return new $OUT$(); }&#10;&#10;    @Override&#10;    protected void buildWithInstance($OUT$ outputInstance, $IN$ input) {&#10;&#10;    }&#10;&#10;    @Override&#10;    protected void mapWithInstance($IN$ bean, $OUT$ jsonDTO) {&#10;        &#10;    }&#10;}" description="define class extends JsonDTOBuilderV2" toReformat="false" toShortenFQNames="true">
    <variable name="OUT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="IN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="//==" value="// ================= $NAME$ ================" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="&quot;getter &amp; setter&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="daten" value="$DATE$ != null ? $DATE$.toString() : null" description="define not null date" toReformat="false" toShortenFQNames="true">
    <variable name="DATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="HH" value="return HibernateSessionHelper.execute(session -&gt; {&#10;    return $END$&#10;});" description="define hibernate session statement" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newo" value="$class$ $var$ = new $class$();&#10;$END$" description="define new object declaration" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="beanset" value="if( bean.get$BEAN_PROPERTY$() == null &amp;&amp; jsonDTO.get$PROPERTY_OUT$() != null){&#10;    bean.set$BEAN_PROPERTY$(new $CLASSS$());&#10;    bean.get$BEAN_PROPERTY$().setId(jsonDTO.get$PROPERTY_OUT$());&#10;}&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="BEAN_PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_OUT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSS" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="JBuilder" value="//=================== Builder =======================&#10;public static class Builder extends JsonDTOBuilder&lt;$OUT$$END$, $IN$&gt;{&#10;    @Override&#10;    public $OUT$ build($IN$ input) {&#10;        $OUT$ dto = new $OUT$();&#10;&#10;        return dto;&#10;    }&#10;&#10;    @Override&#10;    public $IN$ map($OUT$ jsonDTO) {&#10;        $IN$ bean = new $IN$();&#10;        &#10;        return bean;&#10;    }&#10;}" description="define class extends JsonDTOBuilder" toReformat="false" toShortenFQNames="true">
    <variable name="OUT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="IN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="Builder" value="// ================= builder ================&#10;public static class Builder{&#10;    public $OUT$ build($CLASS$ bean){&#10;        $OUT$ out = new $OUT$();&#10;        $END$&#10;        return out;&#10;    }&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="OUT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="&lt;links" value="&lt;link rel=&quot;stylesheet&quot; href=&quot;${contextPath}/$HREF$&quot;/&gt;&#10;" description="define liink with src" toReformat="false" toShortenFQNames="true">
    <variable name="HREF" expression="clipboard()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="&lt;script" value="&lt;script type=&quot;text/javascript&quot;&gt;&#10;    $END$&#10;&lt;/script&gt;" description="define scrpt" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="&lt;scriptj" value="&lt;script type=&quot;text/javascript&quot;&gt;&#10;    $(function(){&#10;        $END$&#10;    });&#10;&lt;/script&gt;" description="define script tag for jquery" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="&lt;scripts" value="&lt;script type=&quot;text/javascript&quot; src=&quot;$SRC$&quot;&gt;&lt;/script&gt;" description="define script with src" toReformat="false" toShortenFQNames="true">
    <variable name="SRC" expression="concat(&quot;${contextPath}/&quot;, clipboard())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="&lt;scriptv" value="&lt;script type=&quot;text/javascript&quot;&gt;&#10;    $(function(){&#10;        new Vue({&#10;            el: &quot;#$EL$&quot;,&#10;            data: {&#10;               $END$&#10;            },&#10;            methods: {&#10;               &#10;            }&#10;        });&#10;    });&#10;&lt;/script&gt;" description="define script for vuejs" toReformat="false" toShortenFQNames="true">
    <variable name="EL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="/*" value="/* $TODAY$ created by XQU */" description="createby" toReformat="false" toShortenFQNames="true">
    <variable name="TODAY" expression="date(dd/MM/yyyy)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="fori" value="var tmp;&#10;for(var i = 0; i &lt; $ARRAY$.length; i++){&#10;    tmp = $ARRAY$[i];&#10;    $END$&#10;}" description="for loop" toReformat="false" toShortenFQNames="true">
    <variable name="ARRAY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="action" value="&lt;action name=&quot;$action$&quot; class=&quot;$classRef$&quot; method=&quot;$methodName$Action&quot;&gt;&#10;    &lt;interceptor-ref name=&quot;communStack&quot;/&gt;&#10;    &lt;result name=&quot;success&quot;&gt;$jspPath$&lt;/result&gt;&#10;&lt;/action&gt;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="action" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="classRef" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="" defaultValue="camelCase(action)" alwaysStopAt="false" />
    <variable name="jspPath" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="actionj" value="&lt;action name=&quot;$actionName$&quot; class=&quot;$classRef$&quot; method=&quot;$methodName$Json&quot;&gt;&#10;    &lt;interceptor-ref name=&quot;valid-user&quot;/&gt;&#10;    &lt;interceptor-ref name=&quot;json&quot;/&gt;&#10;    &lt;result name=&quot;success&quot; type=&quot;hjson&quot;&gt;&#10;        &lt;param name=&quot;excludeNullProperties&quot;&gt;true&lt;/param&gt;&#10;        &lt;param name=&quot;root&quot;&gt;jsonResult&lt;/param&gt;&#10;    &lt;/result&gt;&#10;&lt;/action&gt;" description="define an action type json" toReformat="false" toShortenFQNames="true">
    <variable name="actionName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="classRef" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="" defaultValue="camelCase(actionName)" alwaysStopAt="false" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
</templateSet>