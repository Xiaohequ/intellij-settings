<templateSet group="1_custom">
  <template name="returns" value="return handleExceptions(() -&gt; {&#10;    //check inputs&#10;    &#10;    return SUCCESS;&#10;});" description="define actionsupport exception handler" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="returno" value="$CLAZZ$ $OBJ$ = new $CLAZZ$();&#10;$END$&#10;return $OBJ$;" description="define return with object" toReformat="false" toShortenFQNames="true">
    <variable name="CLAZZ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="OBJ" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="singleton" value="// ================= singleton ======================&#10;private static final $CLAZZ$ instance = new $CLAZZ$();&#10;public static $CLAZZ$ getInstance(){ return instance; }&#10;private $CLAZZ$(){} // prevent instanciate outside&#10;&#10;// ================= class fields ===================&#10;$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="CLAZZ" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="logger" value="private static final Logger logger = LoggerFactory.getLogger($CLAZZ$.class);&#10;" description="declarate logger for class" toReformat="false" toShortenFQNames="true">
    <variable name="CLAZZ" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="JBuilderV2" value="//=================== Builder =======================&#10;public static class Builder extends JsonDTOBuilderV2&lt;$OUT$$END$, $IN$&gt;{&#10;    @Override&#10;    protected $IN$ getInputInstance() { return new $IN$(); }&#10;&#10;    @Override&#10;    protected $OUT$ getOutputInstance() { return new $OUT$(); }&#10;&#10;    @Override&#10;    protected void buildWithInstance($OUT$ outputInstance, $IN$ input) {&#10;&#10;    }&#10;&#10;    @Override&#10;    protected void mapWithInstance($IN$ bean, $OUT$ jsonDTO) {&#10;        &#10;    }&#10;}" description="define class extends JsonDTOBuilderV2" toReformat="false" toShortenFQNames="true">
    <variable name="OUT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="IN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="//==" value="// ================= $NAME$ ================" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="&quot;getter &amp; setter&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="daten" value="$DATE$ != null ? $DATE$.toString() : null" description="define not null date" toReformat="false" toShortenFQNames="true">
    <variable name="DATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="HH" value="return HibernateSessionHelper.execute(session -&gt; {&#10;    return $END$&#10;});" description="define hibernate session statement" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newo" value="$class$ $var$ = new $class$();&#10;$END$" description="define new object declaration" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="beanset" value="bean.set$BEAN_PROPERTY$(new $CLASSS$());&#10;bean.get$BEAN_PROPERTY$().setId(jsonDTO.get$PROPERTY_OUT$());" toReformat="false" toShortenFQNames="true">
    <variable name="BEAN_PROPERTY" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSS" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_OUT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="JBuilder" value="//=================== Builder =======================&#10;public static class Builder extends JsonDTOBuilder&lt;$OUT$$END$, $IN$&gt;{&#10;    @Override&#10;    public $OUT$ build($IN$ input) {&#10;        $OUT$ dto = new $OUT$();&#10;&#10;        return dto;&#10;    }&#10;&#10;    @Override&#10;    public $IN$ map($OUT$ jsonDTO) {&#10;        $IN$ bean = new $IN$();&#10;        &#10;        return bean;&#10;    }&#10;}" description="define class extends JsonDTOBuilder" toReformat="false" toShortenFQNames="true">
    <variable name="OUT" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="IN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
</templateSet>